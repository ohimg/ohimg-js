name: Release & Publish

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type (major, minor, patch, alpha, beta)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - alpha
          - beta

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Git config
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Create Release Commit and Tag
        id: create_release
        run: |
          echo "Current version: $(node -p "require('./package.json').version")"

          if [[ "${{ github.event.inputs.release-type }}" == "alpha" || "${{ github.event.inputs.release-type }}" == "beta" ]]; then
            npm run release:${{ github.event.inputs.release-type }}
          else
            npm run release -- --release-as ${{ github.event.inputs.release-type }}
          fi

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "New version: ${NEW_VERSION}"

          # Get the latest commit message (changelog)
          git log -1 --pretty=%B > release_notes.txt

      - name: Push Changes
        run: |
          echo "Pushing changes to repository..."
          git push origin HEAD:main --follow-tags
          echo "Push completed"

      - name: Git Log
        run: |
          ls -l
          cat release_notes.txt

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # echo "Creating GitHub release v${NEW_VERSION}..."

          # echo "Generating release_notes.txt"
          # git log --pretty=format:'%s' $(git describe --tags --abbrev=0)..HEAD > release_notes.txt
          # echo "Contents of release_notes.txt:"
          # cat release_notes.txt

          # echo "Using release notes file: release_notes.txt"

          ls -l

          gh release create "v${NEW_VERSION}" \
            --title "v${NEW_VERSION}" \
            --notes-file "release_notes.txt" \
            --prerelease ${{ contains(github.event.inputs.release-type, 'alpha') || contains(github.event.inputs.release-type, 'beta') }}

      - name: Publish to NPM
        run: |
          echo "Publishing version ${NEW_VERSION} to NPM..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
